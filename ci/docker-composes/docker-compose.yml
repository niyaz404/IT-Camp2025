services:
  frontend:
    container_name: ${FRONT_HOST}
    build:
      context: ../../
      dockerfile: ci/dockerfiles/Frontend.Dockerfile
      args:
        VITE_API_URL: http://192.168.1.131:${WEBAPI_PORT}
        VITE_KEYCLOAK_URL: http://192.168.1.131:${KEYCLOAK_PORT}
        VITE_KEYCLOAK_REALM: ${KEYCLOAK_REALM}
        VITE_KEYCLOAK_CLIENT_ID: frontend
    environment:
      NODE_ENV: development
    ports:
      - "${FRONT_PORT}:80"
    depends_on:
      - webapi
    networks:
      - itcamp_network
    volumes:
      - .:/app

  webapi:
    container_name: ${WEBAPI_HOST}
    build:
      context: ../../
      dockerfile: ci/dockerfiles/WebApi.Dockerfile
    environment:    
      FRONTEND_URL: ${FRONT_HOST}:${FRONT_PORT}
      AUTH_SERVICE_URL: http://${KEYCLOAK_HOST}:${KEYCLOAK_INTERNAL_PORT}/realms/${KEYCLOAK_REALM}
      DATA_MANAGER_SERVICE_URL: http://${DATA_MANAGER_SERVICE_HOST}:${DATA_MANAGER_SERVICE_PORT}
      ASPNETCORE_URLS: http://+:${WEBAPI_PORT}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_AUDIENCE: ${KEYCLOAK_AUDIENCE}
      KEYCLOAK_PUBLIC_URL: http://192.168.1.131:${KEYCLOAK_PORT}
      KEYCLOAK_INTERNAL_URL: http://keycloak:${KEYCLOAK_PORT}
      
    ports:
      - "${WEBAPI_PORT}:${WEBAPI_PORT}"
    depends_on:
      - keycloak
    networks:
      - itcamp_network

  data_manager_service:
    container_name: ${DATA_MANAGER_SERVICE_HOST}
    build:
      context: ../../
      dockerfile: ci/dockerfiles/DataManagerService.Dockerfile
    ports:
      - "${DATA_MANAGER_SERVICE_PORT}:${DATA_MANAGER_SERVICE_PORT}"
    environment:
      CONNECTION_STRING: ${DATA_MANAGER_SERVICE_CONNECTION_STRING}
      ASPNETCORE_URLS: http://+:${DATA_MANAGER_SERVICE_PORT}
    networks:
      - itcamp_network

  keycloak_postgres:
    image: postgres:15
    container_name: keycloak_postgres
    environment:
      POSTGRES_DB: ${KEYCLOAK_POSTGRES_DB}
      POSTGRES_USER: ${KEYCLOAK_POSTGRES_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
    volumes:
      - keycloak-postgres-data:/var/lib/postgresql/data
    networks:
      - itcamp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KEYCLOAK_POSTGRES_USER} -d ${KEYCLOAK_POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.2
    container_name: keycloak
    command: start-dev --import-realm
    environment:
      KC_HOSTNAME: 192.168.1.131
      KC_HOSTNAME_PORT: ${KEYCLOAK_PORT}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_PROXY_HEADERS: xforwarded
      KC_HTTP_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_postgres:5432/${KEYCLOAK_POSTGRES_DB}
      KC_DB_USERNAME: ${KEYCLOAK_POSTGRES_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    ports:
      - "${KEYCLOAK_PORT}:${KEYCLOAK_INTERNAL_PORT}"
    depends_on:
      keycloak_postgres:
        condition: service_healthy
    networks:
      - itcamp_network

volumes:
  keycloak-postgres-data:
  redis_data:

networks:
  itcamp_network:
    name: itcamp_network
    driver: bridge

services:
  frontend:
    container_name: ${FRONT_HOST}
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/Frontend.Dockerfile
      args:
        VITE_API_URL: http://localhost:${FRONT_PORT}
    environment:
      NODE_ENV: development
    ports:
      - "${FRONT_PORT}:80"
    networks:
      - itcamp_network
    volumes:
      - .:/app

  webapi:
    container_name: webapi
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/WebApi.Dockerfile
    environment:    
      FRONTEND_URL: ${FRONT_HOST}:${FRONT_PORT}
      AUTH_SERVICE_URL: http://${AUTH_SERVICE_HOST}:${AUTH_SERVICE_PORT}
      CONNECTION_STRING: ${WEBAPI_CONNECTION_STRING}
      ASPNETCORE_URLS: http://+:${WEBAPI_PORT}
      REDIS_CONNECTION_STRING: ${REDIS_HOST}:${REDIS_PORT},password=%{REDIS_PASSWORD},abortConnect=false"
    ports:
      - "${WEBAPI_PORT}:${WEBAPI_PORT}"
    networks:
      - itcamp_network

  auth_service:
    container_name: ${AUTH_SERVICE_HOST}
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/AuthService.Dockerfile
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    environment:
      CONNECTION_STRING: ${AUTH_CONNECTION_STRING}
      ASPNETCORE_URLS: http://+:${AUTH_SERVICE_PORT}
    networks:
      - itcamp_network

  auth_postgres:
    container_name: auth_postgres_db
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/AuthPostgres.Dockerfile
      args:
        POSTGRES_DB: ${AUTH_POSTGRES_DB}
        POSTGRES_USER: ${AUTH_POSTGRES_USER}
        POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - auth-postgres-data:/var/lib/postgresql/data
    networks:
      - itcamp_network

  auth_migrator:
    container_name: auth_migrator
    build:
      context: /../../
      dockerfile: /ci/dockerfiles/AuthPostgresMigrator.Dockerfile
    depends_on:
      - auth_postgres
    environment:
      POSTGRES_HOST: ${AUTH_POSTGRES_HOST}
      POSTGRES_DB: ${AUTH_POSTGRES_DB}
      POSTGRES_USER: ${AUTH_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    networks:
      - itcamp_network

  redis:
    image: redis:7-alpine
    container_name: redis
    command: >
      sh -c 'exec redis-server
      --appendonly yes
      --save 60 1000
      --requirepass "$$REDIS_PASSWORD"'
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", 'redis-cli -a "$REDIS_PASSWORD" ping | grep PONG']
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  webapi-postgres-data:  
  auth-postgres-data:
  redis_data:

networks:
  itcamp_network:
    name: itcamp_network
    driver: bridge
